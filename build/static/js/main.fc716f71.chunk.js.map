{"version":3,"sources":["AppStyles.js","App.js","reportWebVitals.js","index.js"],"names":["appStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","marginLeft","search","marginTop","terkepFolott","udvozloAlatt","marginBottom","inputAlatt","textAlign","kozepre","searchForm","display","width","padding","fontSize","loading","mapContainerStyle","height","options","disableDefaultUI","zoomControl","center","App","classes","useState","latitude","setLatitude","longitude","setLongitude","isClicked","setIsClicked","mapRef","React","useRef","onMapLoad","useCallback","map","current","usePlacesAutocomplete","requestOptions","location","lat","lng","radius","ready","value","suggestions","status","data","setValue","clearSuggestions","handleSelect","address","a","getGeocode","results","getLatLng","console","log","className","AppBar","position","Toolbar","src","alt","Typography","variant","IconButton","edge","color","aria-label","href","onClick","navigator","geolocation","getCurrentPosition","coords","Container","maxWidth","gutterBottom","Grid","container","item","xs","style","alignSelf","onSelect","onChange","e","target","disabled","place_id","description","margin","CircularProgress","size","id","zoom","onLoad","icon","url","scaledSize","window","google","maps","Size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc716f71.chunk.js","sourcesContent":["import {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst appStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(1),\r\n        flexGrow: 1,\r\n    },\r\n    search:{\r\n        marginTop: theme.spacing(10),\r\n    },\r\n    terkepFolott:{\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    udvozloAlatt:{\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    inputAlatt:{\r\n        marginTop: theme.spacing(5),\r\n        textAlign: \"center\",\r\n    },\r\n    kozepre:{\r\n        textAlign: \"center\",\r\n    },\r\n    searchForm:{\r\n        display:\"flex\",\r\n        width: 100 + '%',\r\n        padding: 0.5 + 'rem',\r\n        fontSize: 1 + 'rem'\r\n    },\r\n    loading: {\r\n        display: 'flex',\r\n        marginTop: theme.spacing(40),\r\n        marginLeft: 47 + '%'\r\n    },\r\n}));\r\n\r\nexport default appStyles;","import React, {useState} from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport appStyles from './AppStyles'\r\n\r\nimport {\r\n  GoogleMap,\r\n  Marker,\r\n  Circle,\r\n} from \"@react-google-maps/api\";\r\nimport usePlacesAutocomplete, {\r\n  getGeocode,\r\n  getLatLng,\r\n} from \"use-places-autocomplete\";\r\nimport {\r\n  Combobox,\r\n  ComboboxInput,\r\n  ComboboxPopover,\r\n  ComboboxList,\r\n  ComboboxOption,\r\n} from \"@reach/combobox\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport {CircularProgress, Container, Grid} from \"@material-ui/core\";\r\n\r\nconst mapContainerStyle = {\r\n  height: \"80vh\",\r\n  width: \"100%\",\r\n};\r\n\r\nconst options = {\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n};\r\n\r\nconst center = {\r\n  lat: 47.4983815,\r\n  lng: 19.0404707\r\n}\r\n\r\nexport default function App() {\r\n\r\n  const classes = appStyles();\r\n  const [latitude, setLatitude] = useState(0);\r\n  const [longitude, setLongitude] = useState(0);\r\n  const [isClicked, setIsClicked] = useState(false);\r\n  const mapRef = React.useRef();\r\n  const onMapLoad = React.useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  function goToMap(){\r\n    setIsClicked(true);\r\n  }\r\n\r\n  const {\r\n    ready,\r\n    value,\r\n    suggestions: { status, data },\r\n    setValue,\r\n    clearSuggestions,\r\n  } = usePlacesAutocomplete({\r\n    requestOptions: {\r\n      location: { lat: () => center.lat, lng: () => center.lng },\r\n      radius: 400 * 1000,\r\n    },\r\n  });\r\n\r\n  const handleInput = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleSelect = async (address) => {\r\n    setValue(address, false);\r\n    clearSuggestions();\r\n\r\n    try {\r\n      const results = await getGeocode({ address });\r\n      const {lat, lng} = await getLatLng(results[0]);\r\n      setLatitude(lat);\r\n      setLongitude(lng);\r\n    } catch (error) {\r\n      console.log(\"Hiba: \", error);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <img src=\"dog.svg\" alt=\"Kutya ikon\" width=\"2%\" height=\"2%\"/>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              SétáltAPP\r\n            </Typography>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" href=\"http://localhost:3000/\" >\r\n              <ReplayIcon/>\r\n            </IconButton>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => {\r\n              navigator.geolocation.getCurrentPosition(\r\n                  (position) => {\r\n                      setLatitude(position.coords.latitude)\r\n                      setLongitude(position.coords.longitude)\r\n                  },\r\n                  () => null\r\n              );\r\n              setIsClicked(true);\r\n            }}>\r\n              <MyLocationIcon/>\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n      {!isClicked &&\r\n      <Container maxWidth=\"sm\" className={classes.search}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Üdvözöllek a SétáltAPP oldalán!\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          A célunk az alkalmazással, hogy ebben a vírussal teli időszakban, le ne csukjanak, ha este levinnéd sétálni a kutyusod.\r\n        </Typography>\r\n        <Typography variant=\"body1\" className={classes.udvozloAlatt}>\r\n          Ha egy bizonyos címre szeretnéd megnézni az 500m-es körzetet, akkor azt lejjebb megteheted. Ha a tartózkodási helyed alapján szeretnéd megnézni, akkor pedig kattints a fejléc jobb oldali gombjára.\r\n        </Typography>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6} className={classes.kozepre}>\r\n        Kérlek add meg a címed:\r\n          </Grid>\r\n          <Grid item xs={6} className={classes.kozepre}>\r\n            Kattints a térkép gombra a megjelenítéshez:\r\n          </Grid>\r\n          <Grid item xs={6} style={{alignSelf:\"center\"}}>\r\n            <Combobox onSelect={handleSelect}>\r\n              <ComboboxInput\r\n                  value={value}\r\n                  onChange={handleInput}\r\n                  disabled={!ready}\r\n                  className={classes.searchForm}\r\n              />\r\n              <ComboboxPopover>\r\n                <ComboboxList>\r\n                  {status === \"OK\" &&\r\n                  data.map(({ place_id, description }) => (\r\n                      <ComboboxOption key={place_id} value={description} />\r\n                  ))}\r\n                </ComboboxList>\r\n              </ComboboxPopover>\r\n            </Combobox>\r\n          </Grid>\r\n          <Grid item xs={6} className={classes.kozepre}>\r\n        <IconButton aria-label=\"to-map\" className={classes.margin} onClick={e => {goToMap(e)}} disabled={!longitude} >\r\n          <MapIcon/>\r\n        </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n        <Typography variant=\"body2\" className={classes.inputAlatt}>\r\n          Készítette: Káposzta Gergő és Pálinkás István\r\n        </Typography>\r\n        <Typography variant=\"body2\" className={classes.kozepre}>\r\n          Készült az ELTE Térképtudományi és Geoinformatikai Tanszékén\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom className={classes.kozepre}>\r\n          Budapest, 2020\r\n        </Typography>\r\n      </Container>\r\n      }\r\n      {isClicked && latitude===0 &&\r\n        <div className={classes.loading}>\r\n          <CircularProgress size={80}/>\r\n        </div>\r\n      }\r\n      {isClicked && latitude!==0 &&\r\n      <Container maxWidth=\"xl\" className={classes.terkepFolott}>\r\n        <GoogleMap\r\n            id=\"map\"\r\n            mapContainerStyle={mapContainerStyle}\r\n            zoom={16}\r\n            center={{\r\n              lat: latitude,\r\n              lng:longitude\r\n            }}\r\n            options={options}\r\n            onLoad={onMapLoad}\r\n        >\r\n          <Marker\r\n              position={{\r\n                lat: latitude,\r\n                lng: longitude\r\n              }}\r\n              icon={{\r\n                url:'/dog.svg',\r\n                scaledSize: new window.google.maps.Size(30,30)\r\n              }}\r\n          />\r\n          <Circle center={{lat: latitude, lng: longitude}} radius={500}/>\r\n        </GoogleMap>\r\n      </Container>\r\n      }\r\n    </div>\r\n  );\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}